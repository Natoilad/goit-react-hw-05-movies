{"version":3,"file":"static/js/247.2a69eda0.chunk.js","mappings":"uMAiEA,UA7Da,WACX,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUH,GAASI,MAAK,SAAAC,GACtBN,EAAcM,EAAcC,KAC7B,GACF,GAAE,CAACN,KAGF,gBACEO,MAAO,CACLC,QAAS,GACTC,UAAW,SACXC,QAAS,OACTC,SAAU,OACVC,IAAK,GACLC,eAAgB,iBAPpB,SAWGf,EAAWgB,OAAS,EACnBhB,EAAWiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,KAAhC,OACb,iBACEZ,MAAO,CACLa,OAAQ,YACRZ,QAAS,GACTa,MAAO,IACPR,eAAgB,gBAChBH,QAAS,OACTY,cAAe,UAPnB,UAYGL,GACC,gBACEM,IAAG,yCAAoCN,GACvCO,IAAKL,EACLE,MAAO,OAGT,SAAC,MAAD,CAAoBI,KAAM,OAE5B,wBACE,uBAAIN,OAEN,uCAEE,kBAFF,IAEUD,EAAUQ,OAAO,EAAG,QAjBzBV,EAVM,KAgCf,yDAIP,C,8LC9DKW,EAAW,+BACXC,EAAU,mCAEHC,EAAiB,mCAAG,WAAMC,GAAN,gGAEVC,EAAAA,EAAAA,IAAA,UACdJ,EADc,iCACmBC,EADnB,kBACoCE,EADpC,+CAFU,cAEvBE,EAFuB,yBAKtBA,EAAKC,MALiB,sCAOvB,IAAIC,MAAM,KAAMC,YAPO,yDAAH,sDAWjBC,EAAa,mCAAG,6GAENL,EAAAA,EAAAA,IAAA,UACdJ,EADc,wCAC0BC,EAD1B,YAFM,cAEnBI,EAFmB,yBAKlBA,EAAKC,MALa,sCAOnB,IAAIC,MAAM,KAAMC,YAPG,yDAAH,qDAWbE,EAAiB,mCAAG,WAAMrB,GAAN,gGAEVe,EAAAA,EAAAA,IAAA,UACdJ,EADc,kBACIX,EADJ,oBACkBY,EADlB,2BAFU,cAEvBI,EAFuB,yBAKtBA,EAAKC,MALiB,sCAOvB,IAAIC,MAAM,KAAMC,YAPO,yDAAH,sDAWjBhC,EAAS,mCAAG,WAAMa,GAAN,gGAEFe,EAAAA,EAAAA,IAAA,UACdJ,EADc,kBACIX,EADJ,4BAC0BY,EAD1B,oBAFE,cAEfI,EAFe,yBAKdA,EAAKC,MALS,sCAOf,IAAIC,MAAM,KAAMC,YAPD,yDAAH,sDAWTG,EAAY,mCAAG,WAAMtB,GAAN,gGAELe,EAAAA,EAAAA,IAAA,UACdJ,EADc,kBACIX,EADJ,4BAC0BY,EAD1B,oBAFK,cAElBI,EAFkB,yBAKjBA,EAAKC,MALY,sCAOlB,IAAIC,MAAM,KAAMC,YAPE,yDAAH,qD","sources":["components/Cast/Cast.jsx","service/serviceAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'service/serviceAPI';\nimport { AiOutlineFileImage } from 'react-icons/ai';\nconst Cast = () => {\n  const [moviesCast, setMoviesCast] = useState([]);\n  const { movieId } = useParams();\n\n  // console.dir(moviesCast);\n  useEffect(() => {\n    fetchCast(movieId).then(respMovieCast => {\n      setMoviesCast(respMovieCast.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <div\n      style={{\n        padding: 30,\n        textAlign: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 10,\n        justifyContent: 'space-between',\n        // width: 200,\n      }}\n    >\n      {moviesCast.length > 0 ? (\n        moviesCast.map(({ id, profile_path, character, name }) => (\n          <div\n            style={{\n              border: '1px solid',\n              padding: 10,\n              width: 200,\n              justifyContent: 'space-between',\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n            key={id}\n          >\n            {/* {console.log(profile_path)} */}\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n                width={200}\n              />\n            ) : (\n              <AiOutlineFileImage size={200} />\n            )}\n            <p>\n              <b>{name}</b>\n            </p>\n            <p>\n              Character:\n              <br /> {character.substr(0, 9)}\n            </p>\n          </div>\n        ))\n      ) : (\n        <p> Sorry, there isn't any info</p>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '178b07d62e47484c1918df64bd242568';\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1&language=en-US&include_adult=false`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n\nexport const fetchTrending = async () => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=1`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n\nexport const fetchDetailsMovie = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&page=1&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n\nexport const fetchCast = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n\nexport const fetchReviews = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n"],"names":["useState","moviesCast","setMoviesCast","movieId","useParams","useEffect","fetchCast","then","respMovieCast","cast","style","padding","textAlign","display","flexWrap","gap","justifyContent","length","map","id","profile_path","character","name","border","width","flexDirection","src","alt","size","substr","BASE_URL","API_KEY","fetchSearchMovies","query","axios","resp","data","Error","statusText","fetchTrending","fetchDetailsMovie","fetchReviews"],"sourceRoot":""}