{"version":3,"file":"static/js/304.45fc8e9c.chunk.js","mappings":"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","sources":["components/ListMovies/ListMovies.jsx","components/Loader/Loader.jsx","components/SearchInput/SearchInput.jsx","pages/Movies/Movies.jsx","service/serviceAPI.js"],"sourcesContent":["import { Link, Outlet, useLocation } from 'react-router-dom';\n// import { PropTypes } from 'prop-types';\nexport const ListMovies = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul\n        style={{\n          // listStyle: 'none',\n          padding: 0,\n          margin: 0,\n        }}\n      >\n        {movies.map(({ id, title }) => {\n          return (\n            <li\n              style={{\n                listStyle: 'none',\n                padding: 3,\n                margin: 0,\n              }}\n              key={id}\n            >\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Outlet />\n    </>\n  );\n};\nexport default ListMovies;\n","export const Loader = () => {\n  <div>Loading...</div>;\n};\nexport default Loader;\n","import { useState } from 'react';\n\nexport const SearchInput = ({ onSearch }) => {\n  console.log(`FUNC? ${onSearch}`);\n  const [query, setQuery] = useState('');\n  const changeQuery = evt => {\n    setQuery(evt.target.value.toLowerCase());\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      return alert('Please enter search movies');\n    }\n\n    // console.log(query);\n    onSearch(query);\n    setQuery('');\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter search movie\"\n          name=\"query\"\n          value={query}\n          onChange={changeQuery}\n        />\n        <button type=\"submit\">search</button>\n      </form>\n    </div>\n  );\n};\nexport default SearchInput;\n","import ListMovies from 'components/ListMovies/ListMovies';\nimport Loader from 'components/Loader/Loader';\nimport SearchInput from 'components/SearchInput/SearchInput';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'service/serviceAPI';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n\n    setLoading(true);\n    fetchSearchMovies(movieName)\n      .then(respMovies => {\n        setMovies(respMovies.results);\n      })\n      .catch(error => setError(error))\n      .finally(loading => setLoading(false));\n  }, [movieName]);\n  const handleOnSubmit = query => {\n    const changeParams = query !== '' ? { query } : {};\n    setSearchParams(changeParams);\n  };\n  return (\n    <div>\n      {error && <h2>{error.message}</h2>}\n      <SearchInput value={movieName} onSearch={handleOnSubmit} />\n      {movies.length > 0 && <ListMovies movies={movies} />}\n      {loading && <Loader />}\n    </div>\n\n    //   // <div>Movies</div>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '178b07d62e47484c1918df64bd242568';\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1&language=en-US&include_adult=false`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n\nexport const fetchTrending = async () => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=1`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n\nexport const fetchDetailsMovie = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&page=1&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n\nexport const fetchCast = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n\nexport const fetchReviews = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n"],"names":["movies","location","useLocation","style","padding","margin","map","id","title","listStyle","to","state","from","onSearch","console","log","useState","query","setQuery","onSubmit","e","preventDefault","alert","type","placeholder","name","value","onChange","evt","target","toLowerCase","useSearchParams","searchParams","setSearchParams","movieName","get","setMovies","loading","setLoading","error","setError","useEffect","fetchSearchMovies","then","respMovies","results","catch","finally","message","length","ListMovies","Loader","BASE_URL","API_KEY","axios","resp","data","Error","statusText","fetchTrending","fetchDetailsMovie","fetchCast","fetchReviews"],"sourceRoot":""}